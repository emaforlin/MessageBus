# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build Binaries

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      BIN_OUTPUT: ./bin

      CLI_PKG: ./cmd/cli
      CLI_BIN_NAME: mbus-cli

      SERVER_PKG: ./cmd/server
      SERVER_BIN_NAME: mbus-server

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.5"

      - name: Build binaries
        run: |
          GOOS=linux GOARCH=amd64 go build -o ${{ env.BIN_OUTPUT }}/${{ env.CLI_BIN_NAME }} ${{ env.CLI_PKG }}
          GOOS=linux GOARCH=amd64 go build -o ${{ env.BIN_OUTPUT }}/${{ env.SERVER_BIN_NAME }} ${{ env.SERVER_PKG }}

      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Binaries
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.BIN_OUTPUT }}/*
          asset_content_type: application/octet-stream
